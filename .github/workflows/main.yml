name: CI/CD Pipeline with SonarQube Data Fetch

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:     # Manual trigger
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
  HTTP_PROXY: ${{ secrets.HTTP_PROXY }}
  no_proxy: "localhost,127.0.0.1,vss-sonarqube.azure.defra.cloud"

jobs:
  # Your existing jobs (build, test, etc.)
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Add your build steps here
      - name: Build
        run: echo "Building the application..."
  
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      # Add your test steps here
      - name: Test
        run: echo "Running tests..."
  
  # SonarQube data fetch job
  fetch-sonarqube-data:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Increased timeout
    steps:
      - uses: actions/checkout@v3

      - name: Install network tools
        run: |
          sudo apt-get update
          sudo apt-get install -y traceroute iputils-ping curl netcat-openbsd

      - name: Test direct connection
        continue-on-error: true
        run: |
          echo "Testing direct connection..."
          curl -v --max-time 10 \
            -k \
            --connect-timeout 5 \
            https://vss-sonarqube.azure.defra.cloud/api/server/version || echo "Direct connection failed"

      - name: Test proxy connection
        if: env.HTTPS_PROXY != ''
        continue-on-error: true
        run: |
          echo "Testing proxy connection..."
          curl -v --max-time 10 \
            -k \
            --connect-timeout 5 \
            -x "${{ secrets.HTTPS_PROXY }}" \
            https://vss-sonarqube.azure.defra.cloud/api/server/version || echo "Proxy connection failed"

      - name: Test alternative proxy connection
        if: env.HTTP_PROXY != ''
        continue-on-error: true
        run: |
          echo "Testing alternative proxy..."
          curl -v --max-time 10 \
            -k \
            --connect-timeout 5 \
            -x "${{ secrets.HTTP_PROXY }}" \
            https://vss-sonarqube.azure.defra.cloud/api/server/version || echo "Alternative proxy connection failed"

      - name: Fetch SonarQube data
        run: |
          mkdir -p data
          MAX_RETRIES=3
          RETRY_DELAY=10
          SUCCESS=false

          for i in $(seq 1 $MAX_RETRIES); do
            echo "Attempt $i of $MAX_RETRIES"
            
            # Try with default settings first
            if curl --location \
              --connect-timeout 30 \
              --max-time 60 \
              -k \
              -H "Authorization: Bearer ${{ secrets.SONARQUBE_TOKEN }}" \
              --output data/sonarqube-issues.json \
              --silent --show-error --fail \
              'https://vss-sonarqube.azure.defra.cloud/api/issues/search?componentKeys=Imports-MS-FrontEndNotification&types=CODE_SMELL&branch=master&statuses=OPEN&severities=MAJOR%2CCRITICAL%2CBLOCKER%2CMINOR'; then
              SUCCESS=true
              break
            fi
            
            # If default failed and proxy is configured, try with proxy
            if [ ! -z "${{ secrets.HTTPS_PROXY }}" ]; then
              if curl --location \
                --connect-timeout 30 \
                --max-time 60 \
                -k \
                -x "${{ secrets.HTTPS_PROXY }}" \
                -H "Authorization: Bearer ${{ secrets.SONARQUBE_TOKEN }}" \
                --output data/sonarqube-issues.json \
                --silent --show-error --fail \
                'https://vss-sonarqube.azure.defra.cloud/api/issues/search?componentKeys=Imports-MS-FrontEndNotification&types=CODE_SMELL&branch=master&statuses=OPEN&severities=MAJOR%2CCRITICAL%2CBLOCKER%2CMINOR'; then
                SUCCESS=true
                break
              fi
            fi
            
            echo "Attempt $i failed"
            if [ $i -lt $MAX_RETRIES ]; then
              echo "Waiting ${RETRY_DELAY}s before next attempt..."
              sleep $RETRY_DELAY
              RETRY_DELAY=$((RETRY_DELAY * 2))
            fi
          done
          
          if [ "$SUCCESS" = false ]; then
            echo "All connection attempts failed"
            exit 1
          fi
          
      - name: Verify data
        if: success()
        run: |
          if [ ! -s data/sonarqube-issues.json ]; then
            echo "Failed to fetch SonarQube data - empty file"
            exit 1
          fi
          jq empty data/sonarqube-issues.json || echo "Invalid JSON format"
          
      - name: Commit and push changes
        if: success()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add data/sonarqube-issues.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Update SonarQube issues [skip ci]"
          git push
