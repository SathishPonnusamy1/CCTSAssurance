name: CI/CD Pipeline with SonarQube Data Fetch

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:     # Manual trigger
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Your existing jobs (build, test, etc.)
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Add your build steps here
      - name: Build
        run: echo "Building the application..."
  
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      # Add your test steps here
      - name: Test
        run: echo "Running tests..."
  
  # SonarQube data fetch job
  fetch-sonarqube-data:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Increase timeout
    steps:
      - uses: actions/checkout@v3
      
      - name: Verify connectivity
        run: |
          ping -c 3 vss-sonarqube.azure.defra.cloud || true
          curl -v --connect-timeout 30 --max-time 60 \
            https://vss-sonarqube.azure.defra.cloud/api/server/version || true
          
      - name: Fetch SonarQube data (with retries)
        run: |
          mkdir -p data
          for i in {1..3}; do
            if curl --location --connect-timeout 30 --max-time 120 \
              'https://vss-sonarqube.azure.defra.cloud/api/issues/search?componentKeys=Imports-MS-FrontEndNotification&types=CODE_SMELL&branch=master&statuses=OPEN&severities=MAJOR%2CCRITICAL%2CBLOCKER%2CMINOR' \
              -H "Authorization: Bearer ${{ secrets.SONARQUBE_TOKEN }}" \
              --output data/sonarqube-issues.json; then
              break
            fi
            sleep $((i*10))
          done
          
      - name: Verify JSON file
        run: |
          if [ ! -s data/sonarqube-issues.json ]; then
            echo "Failed to fetch SonarQube data"
            exit 1
          fi
          jq empty data/sonarqube-issues.json  # Verify valid JSON
          
      - name: Commit and push changes
        if: success()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add data/sonarqube-issues.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Update SonarQube issues [skip ci]"
          git push
